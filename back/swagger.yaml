openapi: 3.0.0
info:
  title: 문화재/축제 API
  description: 문화재와 축제 정보를 제공하는 API 문서
  version: 1.0.0

servers:
  - url: http://localhost:8000
    description: 개발 서버

paths:
  /auth/register:
    post:
      tags:
        - Authentication
      summary: 새 계정 생성
      description: 새로운 사용자 계정을 생성합니다
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
                - password
              properties:
                username:
                  type: string
                  description: 사용자 이름
                  example: "testuser"
                email:
                  type: string
                  format: email
                  description: 사용자 이메일
                  example: "test@example.com"
                password:
                  type: string
                  format: password
                  description: 비밀번호 (최소 8자, 특수문자 포함)
                  example: "Test123!@#"
      responses:
        "201":
          description: 계정 생성 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Account created successfully."
                  account:
                    type: object
                    properties:
                      email:
                        type: string
                      username:
                        type: string
        "400":
          description: 잘못된 요청
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "All fields are required."
        "500":
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "An error occurred while creating the account."

  /auth/login:
    post:
      tags:
        - Authentication
      summary: 로그인
      description: 사용자 로그인을 처리합니다
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  description: 사용자 이메일
                  example: "test@example.com"
                password:
                  type: string
                  format: password
                  description: 비밀번호
                  example: "Test123!@#"
      responses:
        "200":
          description: 로그인 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Login successful."
                  token:
                    type: string
                    description: JWT 토큰
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  account:
                    type: object
                    properties:
                      email:
                        type: string
                      username:
                        type: string
                      is_admin:
                        type: boolean
        "400":
          description: 잘못된 요청
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Email and password are required."
        "404":
          description: 계정을 찾을 수 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Account not found."
        "500":
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error."

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
