openapi: 3.0.0
info:
  title: 문화재/축제 API
  description: 문화재와 축제 정보를 제공하는 API 문서
  version: 1.0.0

servers:
  - url: http://localhost:8000
    description: 개발 서버

paths:
  /create:
    post:
      tags:
        - Account
      summary: 계정 생성
      description: 새로운 사용자 계정을 생성합니다
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
                - password
              properties:
                username:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        "201":
          description: 계정 생성 성공
        "400":
          description: 잘못된 요청
        "500":
          description: 서버 오류

  /delete/{uuid}:
    delete:
      tags:
        - Account
      summary: 계정 삭제
      description: UUID를 사용하여 계정을 삭제합니다
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 계정 삭제 성공
        "404":
          description: 계정을 찾을 수 없음
        "500":
          description: 서버 오류

  /login:
    post:
      tags:
        - Account
      summary: 로그인
      description: 사용자 로그인을 처리합니다
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        "200":
          description: 로그인 성공
        "400":
          description: 잘못된 요청
        "404":
          description: 계정을 찾을 수 없음
        "500":
          description: 서버 오류

  /logout:
    post:
      tags:
        - Account
      summary: 로그아웃
      description: 사용자 로그아웃을 처리합니다
      responses:
        "200":
          description: 로그아웃 성공
        "500":
          description: 서버 오류

  /permissions/{uuid}:
    put:
      tags:
        - Account
      summary: 계정 권한 업데이트
      description: UUID를 사용하여 계정 권한을 업데이트합니다
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                isAdmin:
                  type: boolean
      responses:
        "200":
          description: 권한 업데이트 성공
        "404":
          description: 계정을 찾을 수 없음
        "500":
          description: 서버 오류

  /info:
    get:
      tags:
        - Account
      summary: 사용자 정보 조회
      description: 사용자 정보를 조회합니다
      responses:
        "200":
          description: 정보 조회 성공
        "500":
          description: 서버 오류

  /events:
    get:
      tags:
        - Events
      summary: 이벤트 목록 조회
      description: 이벤트 목록을 조회합니다
      responses:
        "200":
          description: 이벤트 목록 조회 성공
        "500":
          description: 서버 오류

  /accounts:
    get:
      tags:
        - PostgreSQL
      summary: 계정 목록 조회
      description: PostgreSQL에서 계정 목록을 조회합니다
      responses:
        "200":
          description: 계정 목록 조회 성공
        "500":
          description: 서버 오류

  /heritage:
    get:
      tags:
        - PostgreSQL
      summary: 문화재 목록 조회
      description: PostgreSQL에서 문화재 목록을 조회합니다
      responses:
        "200":
          description: 문화재 목록 조회 성공
        "500":
          description: 서버 오류

  /festivals:
    get:
      tags:
        - PostgreSQL
      summary: 축제 목록 조회
      description: PostgreSQL에서 축제 목록을 조회합니다
      responses:
        "200":
          description: 축제 목록 조회 성공
        "500":
          description: 서버 오류

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
